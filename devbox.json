{
  "$schema": "https://raw.githubusercontent.com/jetpack-io/devbox/main/.schema/devbox.schema.json",
  "packages": [
    "kubectl",
    "kubernetes-helm",
    "kind",
    "k3d",
    "curl",
    "jq",
    "nodejs_24@24.3.0",
    "pnpm",
    "yarn",
    "gh",
    "go",
    "golangci-lint",
    "step-cli",
    "cmake",
    "gnupg",
    "pkg-config",
    "openssl",
    "libxml2",
    "yq-go@4.44.1",
    "argocd@2.13.4",
    "iputils",
    "iproute2",
    "netcat",
    "bind",
    "dnsutils",
    "azure-cli@latest",
    "_1password-cli",
    "act"
  ],
  "env_from": "./.env-files/wi.env",
  "shell": {
    "init_hook": [
      "# Install npm global packages",
      "npm install devspace@latest cdk8s-cli",
      "npm install @anthropic-ai/claude-code@latest",
      "# Install additional tools via curl if not available in nixpkgs",
      "if ! command -v azwi &> /dev/null; then",
      "  curl -fsSL 'https://github.com/Azure/azure-workload-identity/releases/download/v1.5.0/azwi-v1.5.0-linux-amd64.tar.gz' | tar -xz -C ~/.local/bin",
      "fi",
      "if ! command -v xh &> /dev/null; then",
      "  curl -fsSL 'https://github.com/ducaale/xh/releases/download/v0.17.0/xh-v0.17.0-x86_64-unknown-linux-musl.tar.gz' | tar -xz --strip-components=1 -C ~/.local/bin",
      "fi",
      "if ! command -v kubectl-ai &> /dev/null; then",
      "  curl -sSL https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/install.sh | bash",
      "fi",
      "if ! command -v vcluster &> /dev/null; then",
      "  curl -L 'https://github.com/loft-sh/vcluster/releases/latest/download/vcluster-linux-amd64' -o ~/.local/bin/vcluster && chmod +x ~/.local/bin/vcluster",
      "fi",
      "if ! command -v argo &> /dev/null; then",
      "  curl -sLO 'https://github.com/argoproj/argo-workflows/releases/download/v3.6.7/argo-linux-amd64.gz' && gunzip argo-linux-amd64.gz && chmod +x argo-linux-amd64 && mv argo-linux-amd64 ~/.local/bin/argo",
      "fi",
      "if ! command -v lpass &> /dev/null; then",
      "  echo 'Note: LastPass CLI needs to be built from source. You can install it manually if needed.'",
      "fi",
      "if ! command -v arkade &> /dev/null; then",
      "  curl -fsSL https://get.arkade.dev | sh && sudo mv arkade /usr/local/bin/",
      "fi",
      "if ! command -v argocd-autopilot &> /dev/null; then",
      "  VERSION=$(curl --silent \"https://api.github.com/repos/argoproj-labs/argocd-autopilot/releases/latest\" | grep '\"tag_name\"' | sed -E 's/.*\"([^\"]+)\".*/\\1/')",
      "  curl -L --output - \"https://github.com/argoproj-labs/argocd-autopilot/releases/download/${VERSION}/argocd-autopilot-linux-amd64.tar.gz\" | tar zx -C /tmp",
      "  mv /tmp/argocd-autopilot-* ~/.local/bin/argocd-autopilot",
      "  chmod +x ~/.local/bin/argocd-autopilot",
      "fi",
      "if ! command -v idpbuilder &> /dev/null; then",
      "  curl -fsSL https://raw.githubusercontent.com/cnoe-io/idpbuilder/main/hack/install.sh | bash",
      "fi"
    ],
    "scripts": {
      "on-create": "bash ./.devcontainer/on-create.sh",
      "setup-wi":  "bash -ic 'scripts/wi-kind-setup.sh'"
    }
  }
}
