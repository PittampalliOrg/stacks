// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 *
 *
 * @schema Localbuild
 */
export class Localbuild extends ApiObject {
  /**
   * Returns the apiVersion and kind for "Localbuild"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'idpbuilder.cnoe.io/v1alpha1',
    kind: 'Localbuild',
  }

  /**
   * Renders a Kubernetes manifest for "Localbuild".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: LocalbuildProps = {}): any {
    return {
      ...Localbuild.GVK,
      ...toJson_LocalbuildProps(props),
    };
  }

  /**
   * Defines a "Localbuild" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: LocalbuildProps = {}) {
    super(scope, id, {
      ...Localbuild.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...Localbuild.GVK,
      ...toJson_LocalbuildProps(resolved),
    };
  }
}

/**
 * @schema Localbuild
 */
export interface LocalbuildProps {
  /**
   * @schema Localbuild#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * @schema Localbuild#spec
   */
  readonly spec?: LocalbuildSpec;

}

/**
 * Converts an object of type 'LocalbuildProps' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_LocalbuildProps(obj: LocalbuildProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_LocalbuildSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * @schema LocalbuildSpec
 */
export interface LocalbuildSpec {
  /**
   * BuildCustomizationSpec fields cannot change once a cluster is created
   *
   * @schema LocalbuildSpec#buildCustomization
   */
  readonly buildCustomization?: LocalbuildSpecBuildCustomization;

  /**
   * @schema LocalbuildSpec#packageConfigs
   */
  readonly packageConfigs?: LocalbuildSpecPackageConfigs;

}

/**
 * Converts an object of type 'LocalbuildSpec' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_LocalbuildSpec(obj: LocalbuildSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'buildCustomization': toJson_LocalbuildSpecBuildCustomization(obj.buildCustomization),
    'packageConfigs': toJson_LocalbuildSpecPackageConfigs(obj.packageConfigs),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * BuildCustomizationSpec fields cannot change once a cluster is created
 *
 * @schema LocalbuildSpecBuildCustomization
 */
export interface LocalbuildSpecBuildCustomization {
  /**
   * @schema LocalbuildSpecBuildCustomization#host
   */
  readonly host?: string;

  /**
   * @schema LocalbuildSpecBuildCustomization#ingressHost
   */
  readonly ingressHost?: string;

  /**
   * @schema LocalbuildSpecBuildCustomization#port
   */
  readonly port?: string;

  /**
   * @schema LocalbuildSpecBuildCustomization#protocol
   */
  readonly protocol?: string;

  /**
   * @schema LocalbuildSpecBuildCustomization#selfSignedCert
   */
  readonly selfSignedCert?: string;

  /**
   * @schema LocalbuildSpecBuildCustomization#staticPassword
   */
  readonly staticPassword?: boolean;

  /**
   * @schema LocalbuildSpecBuildCustomization#usePathRouting
   */
  readonly usePathRouting?: boolean;

}

/**
 * Converts an object of type 'LocalbuildSpecBuildCustomization' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_LocalbuildSpecBuildCustomization(obj: LocalbuildSpecBuildCustomization | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'ingressHost': obj.ingressHost,
    'port': obj.port,
    'protocol': obj.protocol,
    'selfSignedCert': obj.selfSignedCert,
    'staticPassword': obj.staticPassword,
    'usePathRouting': obj.usePathRouting,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * @schema LocalbuildSpecPackageConfigs
 */
export interface LocalbuildSpecPackageConfigs {
  /**
   * ArgoPackageConfigSpec Allows for configuration of the ArgoCD Installation.
   * If no fields are specified then the binary embedded resources will be used to install ArgoCD.
   *
   * @schema LocalbuildSpecPackageConfigs#argoPackageConfigs
   */
  readonly argoPackageConfigs?: LocalbuildSpecPackageConfigsArgoPackageConfigs;

  /**
   * @schema LocalbuildSpecPackageConfigs#customPackageDirs
   */
  readonly customPackageDirs?: string[];

  /**
   * @schema LocalbuildSpecPackageConfigs#customPackageUrls
   */
  readonly customPackageUrls?: string[];

  /**
   * EmbeddedArgoApplicationsPackageConfigSpec Controls the installation of the embedded argo applications.
   *
   * @schema LocalbuildSpecPackageConfigs#embeddedArgoApplicationsPackageConfigs
   */
  readonly embeddedArgoApplicationsPackageConfigs?: LocalbuildSpecPackageConfigsEmbeddedArgoApplicationsPackageConfigs;

  /**
   * @schema LocalbuildSpecPackageConfigs#packageCustomization
   */
  readonly packageCustomization?: { [key: string]: LocalbuildSpecPackageConfigsPackageCustomization };

}

/**
 * Converts an object of type 'LocalbuildSpecPackageConfigs' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_LocalbuildSpecPackageConfigs(obj: LocalbuildSpecPackageConfigs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'argoPackageConfigs': toJson_LocalbuildSpecPackageConfigsArgoPackageConfigs(obj.argoPackageConfigs),
    'customPackageDirs': obj.customPackageDirs?.map(y => y),
    'customPackageUrls': obj.customPackageUrls?.map(y => y),
    'embeddedArgoApplicationsPackageConfigs': toJson_LocalbuildSpecPackageConfigsEmbeddedArgoApplicationsPackageConfigs(obj.embeddedArgoApplicationsPackageConfigs),
    'packageCustomization': ((obj.packageCustomization) === undefined) ? undefined : (Object.entries(obj.packageCustomization).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: toJson_LocalbuildSpecPackageConfigsPackageCustomization(i[1]) }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * ArgoPackageConfigSpec Allows for configuration of the ArgoCD Installation.
 * If no fields are specified then the binary embedded resources will be used to install ArgoCD.
 *
 * @schema LocalbuildSpecPackageConfigsArgoPackageConfigs
 */
export interface LocalbuildSpecPackageConfigsArgoPackageConfigs {
  /**
   * Enabled controls whether to install ArgoCD.
   *
   * @schema LocalbuildSpecPackageConfigsArgoPackageConfigs#enabled
   */
  readonly enabled?: boolean;

}

/**
 * Converts an object of type 'LocalbuildSpecPackageConfigsArgoPackageConfigs' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_LocalbuildSpecPackageConfigsArgoPackageConfigs(obj: LocalbuildSpecPackageConfigsArgoPackageConfigs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enabled': obj.enabled,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * EmbeddedArgoApplicationsPackageConfigSpec Controls the installation of the embedded argo applications.
 *
 * @schema LocalbuildSpecPackageConfigsEmbeddedArgoApplicationsPackageConfigs
 */
export interface LocalbuildSpecPackageConfigsEmbeddedArgoApplicationsPackageConfigs {
  /**
   * Enabled controls whether to install the embedded argo applications and the associated GitServer
   *
   * @schema LocalbuildSpecPackageConfigsEmbeddedArgoApplicationsPackageConfigs#enabled
   */
  readonly enabled?: boolean;

}

/**
 * Converts an object of type 'LocalbuildSpecPackageConfigsEmbeddedArgoApplicationsPackageConfigs' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_LocalbuildSpecPackageConfigsEmbeddedArgoApplicationsPackageConfigs(obj: LocalbuildSpecPackageConfigsEmbeddedArgoApplicationsPackageConfigs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'enabled': obj.enabled,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

/**
 * PackageCustomization defines how packages are customized
 *
 * @schema LocalbuildSpecPackageConfigsPackageCustomization
 */
export interface LocalbuildSpecPackageConfigsPackageCustomization {
  /**
   * FilePath is the absolute file path to a YAML file that contains Kubernetes manifests.
   *
   * @schema LocalbuildSpecPackageConfigsPackageCustomization#filePath
   */
  readonly filePath?: string;

  /**
   * Name is the name of the package to be customized. e.g. argocd
   *
   * @schema LocalbuildSpecPackageConfigsPackageCustomization#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'LocalbuildSpecPackageConfigsPackageCustomization' to JSON representation.
 */
/* eslint-disable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */
export function toJson_LocalbuildSpecPackageConfigsPackageCustomization(obj: LocalbuildSpecPackageConfigsPackageCustomization | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'filePath': obj.filePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, @stylistic/max-len, quote-props, @stylistic/quote-props */

